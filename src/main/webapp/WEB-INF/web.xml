<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0" metadata-complete="true">

	<!--url mapping하는 과정. -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/dispatcher/servlet-context.xml 
			</param-value> 
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>			
				/WEB-INF/dispatcher/service-context.xml
				/WEB-INF/dispatcher/security-context.xml
		</param-value>
	</context-param>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Spring Security Filter -->
<filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
</filter>

<filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>

	<display-name>Welcome to Tomcat</display-name>
	<description>
		Welcome to Tomcat
	</description>

</web-app>


<!-- <?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0" metadata-complete="true">

	url mapping하는 과정.
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/dispatcher/servlet-context.xml 
			</param-value> 
			여기에는파람 밸류를 하나만 넣을 수 있어서, 설정파일 여러개를 할 땐 리스너를 활용해야함
		</init-param>
		이 servlet은 url요청이 들어오면 그때 로드되지만, 첫 로드때 시간이 걸릴 수 있어서, 시작시 바로 같이 로드 해놓
	을 수 있게 하면 좋다.
		<load-on-startup>1</load-on-startup>
		서블릿 비동기식으로 로드하는 것도 가능 async
		<async-supported>true</async-supported>
	</servlet> 기본적으로 약속된 위치에 약속된 이름으로 되어있을 경우, 이렇게만 설정해둬도 됨.
	그러나, 시큐리티, 서비스, 서블릿 컨텍스트 등으로 설정파일을 분리한 경우 따로 연결시켜주어야 함
	
		
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern> /라고 할경우 jsp는 허락, 나머지 정적파일은 막는다. 그로므로 정적파일을 get 요청 하려고 할경우, resource 
			파일 내에 정적파일을 모아두고, 해당 파일을 디스패처 서블릿 .xml에 mvc:resource 를 통해 열어주어야함.
	</servlet-mapping>
	
	
	

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener> 기본적으로 갖게할 파라미터 값은 컨텍스트 파람을 가질 수 있음.	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>			
				/WEB-INF/dispatcher/service-context.xml
				/WEB-INF/dispatcher/security-context.xml
		</param-value>
	</context-param>
	
	<filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
        <param-name>forceEncoding</param-name>
        <param-value>true</param-value>
    </init-param>
</filter>

<filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>
	
	Spring Security Filter
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


	<display-name>Welcome to Tomcat</display-name>
	<description>
     Welcome to Tomcat
  </description>

</web-app>
 -->
 
 